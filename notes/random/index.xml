<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>random on Vladimir Varankin</title><link>https://vladimir.varank.in/notes/random/</link><description>Recent content in random on Vladimir Varankin</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 31 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://vladimir.varank.in/notes/random/index.xml" rel="self" type="application/rss+xml"/><item><title>Bookmarks (issue 8)</title><link>https://vladimir.varank.in/notes/2022/10/bookmarks-8/</link><pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate><guid>https://vladimir.varank.in/notes/2022/10/bookmarks-8/</guid><description>Taking Postgres serverless (Changelog). Neon: Serverless PostgreSQL (Heikki Linnakangas @ Carnegie Mellon University).
Simple simulations for system builders (Marc Brooker). System designers care about questions like &amp;ldquo;How will the system behave under overload?&amp;rdquo; or &amp;ldquo;How sensitive is the design to latency?&amp;rdquo;. By &amp;ldquo;writing small simulators that simulate the behaviour of simple models&amp;rdquo;, Marc shows an approach to explore and reason about the possible answers to such questions.
The HTTP crash course nobody asked for.
Design docs at Google. When not to write a design doc: A clear indicator that a doc might not be necessary is when a design doc is an implementation manual, that doesn&amp;rsquo;t go into trade-offs, alternatives, and explanation of the decision-making; â€” write the actual application instead.</description></item><item><title>Working on a new thing</title><link>https://vladimir.varank.in/notes/2022/09/working-on-a-new-thing/</link><pubDate>Thu, 08 Sep 2022 00:00:00 +0000</pubDate><guid>https://vladimir.varank.in/notes/2022/09/working-on-a-new-thing/</guid><description>Number of developers will tell you, they prefer building &amp;ldquo;a new thing&amp;rdquo;, rather than maintaining existing &amp;ldquo;legacy&amp;rdquo; projects.
While working on &amp;ldquo;green field&amp;rdquo;, &amp;ldquo;day zero&amp;rdquo; projects can definitely be fun, they rarely feel real to me. The &amp;ldquo;real&amp;rdquo; project lives in production. It has users. It has load. It demands improvement.
You can&amp;rsquo;t improve &amp;ldquo;a new thing&amp;rdquo;.</description></item><item><title>Best practices</title><link>https://vladimir.varank.in/notes/2022/08/best-practices/</link><pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate><guid>https://vladimir.varank.in/notes/2022/08/best-practices/</guid><description>Before jumping on the &amp;ldquo;best practices of software engineering&amp;rdquo; train, after reading the classics, or someone&amp;rsquo;s re-post on social media, ask what was the context, in which these &amp;ldquo;best practices&amp;rdquo; were established. Some of those made sense in the environment, where the product&amp;rsquo;s release cycle has been measured with months. But that doesn&amp;rsquo;t mean they make sense, when we ship/fix/ship/new-requirements/ship/update/ship the product several times every week.</description></item><item><title>Bookmarks (issue 5)</title><link>https://vladimir.varank.in/notes/2022/07/bookmarks-5/</link><pubDate>Sun, 31 Jul 2022 00:00:00 +0000</pubDate><guid>https://vladimir.varank.in/notes/2022/07/bookmarks-5/</guid><description>Scott&amp;rsquo;s Bass Lessons and BassBuzz on YouTube. I&amp;rsquo;m learning how to play bass guitar ðŸŽ¸ now. So far, these two channels were the most helpful with both the practice lessons, and the inspiration to move forward.
Event-driven architecture done right (Tim Berglung, Devoxx Poland 2021). Try to learn what you&amp;rsquo;re trying to do, before you elaborate the architecture, if uncertainty is very high, and you donâ€™t know exactly what businesses are asking. Just start with something (architecturally) simple.
Amazon DynamoDB: A Scalable, Predictably Performant, and Fully Managed NoSQL Database Service (whitepaper). The analysis of the paper (Marc Brooker).
Acquired&amp;rsquo;s lessons learned from 200 company stories: optimism always wins (Sony); nothing can stop the will to survive (Nvidia); it&amp;rsquo;s never too late (TSMC); focus on what makes your beer taste better (Amazon and all utility companies); don&amp;rsquo;t be talent â€” own the business (Oprah, Tail Swift); youâ€™ll get the partners you ask for (Amazon&amp;rsquo;s &amp;ldquo;If youâ€™re not on my bus, get off&amp;rdquo;), and more.</description></item><item><title>Bookmarks (issue 4)</title><link>https://vladimir.varank.in/notes/2022/06/bookmarks-4/</link><pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate><guid>https://vladimir.varank.in/notes/2022/06/bookmarks-4/</guid><description>Go 1.19beta1. As usual, lots of good improvements in the language&amp;rsquo;s runtime and the compiler, with one particularly interesting addition being the new &amp;ldquo;knob&amp;rdquo; runtime/debug.SetMemoryLimit.
How to use gender-neutral language at work and in life (Grammarly). &amp;ldquo;Luckily, the English language is relatively gender-neutral in many respects&amp;rdquo; [at least, when compared to Russian and German languages].
Meet passkeys (Apple) and Everything you want to know about WebAuthn (OktaDev). As you can guess, I&amp;rsquo;m very excited with Apple stepping onto the path to a passwordless future, while betting on WebAuthn standard.
Replace CAPTCHAs with Private Access Tokens (Apple), Private Access Tokens: stepping into the privacy-respecting, CAPTCHA-less future we were promised (Fastly), Private Access Tokens: eliminating CAPTCHAs on iPhones and Macs with open standards (Cloudflare).</description></item><item><title>Bookmarks (issue 2)</title><link>https://vladimir.varank.in/notes/2022/04/bookmarks-2/</link><pubDate>Sat, 30 Apr 2022 00:00:00 +0000</pubDate><guid>https://vladimir.varank.in/notes/2022/04/bookmarks-2/</guid><description>Digital object identifier (DOI) (Wikipedia). A DOI is a persistent identifier or handle used to identify various objects uniquely. It aims to be &amp;ldquo;resolvable&amp;rdquo;, usually to some form of access to the information object to which the DOI refers. This is achieved by binding the DOI to metadata about the object, such as a URL. Thus, by being actionable and interoperable, a DOI differs from identifiers such as ISBNs, which aim only to identify their referents uniquely.
Operations principles: securely deploying the graph to production at scale (Principled GraphQL). Lots of things listed there apply to any sort of APIs â€” not only to GraphQL.
Songs your English teacher will NEVER teach! (Learn English with Papa Teach Me). Vocabulary from &amp;ldquo;Savage&amp;rdquo;, &amp;ldquo;WAP&amp;rdquo;, and &amp;ldquo;34+35&amp;rdquo;. This video is definitely not for kids!
8 phrases to spring-clean from your emails (Grammarly).
Platforms and Power (Acquired). &amp;ldquo;7 Powers&amp;rdquo; author Hamilton Helmer and Chenyi Shi (Strategy Capital), joined Acquired Podcast to discuss platform businesses, and how the &amp;ldquo;Power&amp;rdquo; framework applies to them.
Halfthings (Mat Ryer). Building something for the users to play with, to touch, to feel, to break, makes all the difference and moves the conversations away from the meta. Doing &amp;ldquo;one thing&amp;rdquo; or &amp;ldquo;building an MVP&amp;rdquo; can easily pull you into a &amp;ldquo;too much&amp;rdquo; for a validation phase. Build a &amp;ldquo;halfthing&amp;rdquo; instead.</description></item><item><title>Love. Hate. Material Design</title><link>https://vladimir.varank.in/notes/2022/02/love-hate-material/</link><pubDate>Wed, 02 Feb 2022 00:00:00 +0000</pubDate><guid>https://vladimir.varank.in/notes/2022/02/love-hate-material/</guid><description>&lt;p>If Chrome had a notch&lt;/p>
&lt;figure>&lt;img src="https://vladimir.varank.in/images/2022/material-chrome-cut-1x.jpg"
 alt="Chrome notch" width="1000"/>
&lt;/figure></description></item><item><title>Development environment in 2020</title><link>https://vladimir.varank.in/notes/2021/04/development-environment-in-2020/</link><pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate><guid>https://vladimir.varank.in/notes/2021/04/development-environment-in-2020/</guid><description>Last year I made this one, after involving myself into a very random discussion on Twitter, about the unnecessary complexity and none-sense of modern days&amp;rsquo; development environments.</description></item><item><title>On code-reviews</title><link>https://vladimir.varank.in/notes/2020/12/on-code-reviews/</link><pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate><guid>https://vladimir.varank.in/notes/2020/12/on-code-reviews/</guid><description>This is another thought experiment, this time on the importance of my feedback in the code-reviews.
Providing youâ€™re working on a project maintained by a set team of N people. What would happen with the codebase if, for six months, in code-reviews, you started to accept changes for which, you generally leave feedback?
&amp;ldquo;Variables, struct or function names are named poorly&amp;rdquo; â€” accept. &amp;ldquo;We already have a package, that solves a similar problem&amp;rdquo; â€” accept. &amp;ldquo;A change brings inconsistency to the codebase&amp;rdquo; â€” accept. &amp;ldquo;The pattern doesnâ€™t belong here&amp;rdquo; â€” accept.
Go is a famously opinionated programming language. But does being opinionated help and scale outside of the language and its standard library?
Do you have the answer? Discuss this note on r/golang Reddit or share your thoughts on Twitter.</description></item><item><title>A thought experiment on Apple M1</title><link>https://vladimir.varank.in/notes/2020/11/a-thought-experiment-on-apple-m1/</link><pubDate>Tue, 24 Nov 2020 00:00:00 +0000</pubDate><guid>https://vladimir.varank.in/notes/2020/11/a-thought-experiment-on-apple-m1/</guid><description>With Apple&amp;rsquo;s new M1 Macs showing (reportedly) huge performance improvement, compared to &amp;ldquo;old&amp;rdquo;, Intel-based Macs, I wonder what would hold Qualcomm (Snapdragon CPU) and others from doing &amp;ldquo;the same&amp;rdquo; and moving into laptop/desktop territory?
Microsoft already has Surface Pro X â€” an ARM-based Windows computer. They also have a version of Win10 for ARM, that one can even run on Raspberry Pi (still beta quality, I believe). Could 2021 become the year of ARM on desktop?
Even more interesting, Amazon&amp;rsquo;s Graviton is showing (again, reportedly) an excellent performance, while staying at reasonably low cost. What would stop Google/Microsoft from moving into ARM-based CPU territory for their clouds?</description></item><item><title>How to design a good API</title><link>https://vladimir.varank.in/notes/2020/08/how-to-design-a-good-api/</link><pubDate>Fri, 14 Aug 2020 00:00:00 +0000</pubDate><guid>https://vladimir.varank.in/notes/2020/08/how-to-design-a-good-api/</guid><description>A good API is designed around the use-case. A poorly designed, around the API&amp;rsquo;s implementation details.</description></item><item><title>Sticky headers? Please don't</title><link>https://vladimir.varank.in/notes/2020/06/sticky-headers/</link><pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate><guid>https://vladimir.varank.in/notes/2020/06/sticky-headers/</guid><description>&lt;p>Sticky (or &amp;ldquo;&lt;em>fixed&lt;/em>&amp;rdquo;) headers are everywhere. It feels that, nowadays, every web designerâ€™s first attempt to site&amp;rsquo;s navigation starts with a sticky header. I hate this.&lt;/p></description></item></channel></rss>