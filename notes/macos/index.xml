<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Macos on Vladimir Varankin</title><link>https://vladimir.varank.in/notes/macos/</link><description>Recent content in Macos on Vladimir Varankin</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 30 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://vladimir.varank.in/notes/macos/index.xml" rel="self" type="application/rss+xml"/><item><title>Retrieve Location of macOS Device from Go</title><link>https://vladimir.varank.in/notes/2020/03/go-osx-core-location/</link><pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate><guid>https://vladimir.varank.in/notes/2020/03/go-osx-core-location/</guid><description>&lt;p>Participating in self-isolation is more fun when you have toys to play. As a fun weekend project, I wanted to look at how one accesses macOS Location Services and get the geographic location of the device from Go.&lt;/p>
&lt;p>To obtain the geographic location of a device on macOS, we use &lt;a href="https://developer.apple.com/documentation/corelocation?language=objc">Appleâ€™s Core Location&lt;/a> framework. The framework is part of the OS, but it requires writting Objective-C (&lt;em>or Swift&lt;/em>). Thanks to Go&amp;rsquo;s cgo and because Objective-C is from the family of C languages, we can write a bridge between Objective-C and Go.&lt;/p></description></item></channel></rss>